package com.wisedu.cloud.smp.web.common;

import com.wisedu.cloud.smp.api.params.ApiBriefInfo;
import com.wisedu.cloud.smp.api.params.ApiCategory;
import com.wisedu.cloud.smp.api.params.ApiInfo;
import com.wisedu.cloud.smp.api.params.ApplyStatus;
import com.wisedu.cloud.smp.common.util.CommonUtils;
import com.wisedu.cloud.smp.dal.sp.model.ServiceCategory;

import com.wisedu.cloud.smp.dal.sp.model.extend.ServiceInfo;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by huangxuecan on 2016/3/8.
 */
public class TransferUtils {

    public static List<ApiCategory> transServCateToApiCate(List<ServiceCategory> serviceCategories){
        List<ApiCategory> apiCategories = new ArrayList<>();
        if(null == serviceCategories || serviceCategories.isEmpty()){
            return apiCategories;
        }
        for(ServiceCategory serviceCategory:serviceCategories){
            ApiCategory apiCategory = new ApiCategory();
            apiCategory.setCategoryId(serviceCategory.getId());
            apiCategory.setCategoryName(serviceCategory.getCategoryName());
            apiCategories.add(apiCategory);
        }
        return apiCategories;
    }

    public static List<ApiBriefInfo> transServInfoToApiBriInfo(List<ServiceInfo> serviceInfos){
        List<ApiBriefInfo> apiBriefInfos = new ArrayList<>();
        if(null == serviceInfos || serviceInfos.isEmpty()){
            return apiBriefInfos;
        }
        for(ServiceInfo serviceInfo:serviceInfos){
            ApiBriefInfo apiBriefInfo = new ApiBriefInfo();
            apiBriefInfo.setServiceName(serviceInfo.getServiceName());
            apiBriefInfo.setServiceId(serviceInfo.getServiceId());
            apiBriefInfos.add(apiBriefInfo);
        }
        return apiBriefInfos;
    }

    public static List<ApiInfo> transServInfoToApiInfo(List<ServiceInfo> serviceInfos){
        List<ApiInfo> apiInfos = new ArrayList<>();
        if(null == serviceInfos || serviceInfos.isEmpty()){
            return apiInfos;
        }
        for(ServiceInfo serviceInfo: serviceInfos){
            ApiInfo apiInfo = new ApiInfo();
            apiInfo.setServiceId(serviceInfo.getServiceId());
            apiInfo.setServiceName(serviceInfo.getServiceName());
            apiInfo.setCategoryName(serviceInfo.getCategoryName());
            apiInfo.setAccessUrl(serviceInfo.getAccessUrl());
            apiInfo.setApiType(serviceInfo.getApiType());
            apiInfo.setCategoryId(serviceInfo.getCategoryId());
            apiInfos.add(apiInfo);

        }
        return apiInfos;
    }

    public static List<ApplyStatus> transApplyStatus(List<com.wisedu.cloud.smp.dal.sp.model.extend.ApplyStatus> applyStatuses) throws IllegalAccessException {
        List<ApplyStatus> applyStatusesRet = new ArrayList<>();
        if(null == applyStatuses || applyStatuses.isEmpty()){
            return  applyStatusesRet;
        }
        for(com.wisedu.cloud.smp.dal.sp.model.extend.ApplyStatus applyStatus:applyStatuses){
            ApplyStatus applyStatusOne = new ApplyStatus();
            CommonUtils.copyObject(applyStatus,applyStatusOne);
            applyStatusesRet.add(applyStatusOne);
        }
        return applyStatusesRet;
    }
}
