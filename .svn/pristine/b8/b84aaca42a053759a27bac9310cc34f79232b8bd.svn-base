package com.wisedu.cloud.smp.dal.redisdao.impl;

import com.alibaba.fastjson.JSON;
import com.google.common.base.Strings;
import com.wisedu.cloud.smp.dal.redisdao.ServCateRedisDao;
import com.wisedu.cloud.smp.dal.sp.model.ServiceCategory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.StringRedisTemplate;
import org.springframework.stereotype.Repository;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;

/**
 * Created by huangxuecan on 2016/3/3.
 */
@Repository("servCateRedisDao")
public class ServCateRedisDaoImpl implements ServCateRedisDao {

    //list 结构
    private static String SERVICE_CATEGORY_KEY = "serviceCategory";
    private static Integer EXPIRE_TIME_MINUTE = 1;

    @Autowired
    private StringRedisTemplate stringRedisTemplate;

    @Override
    public List<ServiceCategory> getServiceCategories() {
        List<String> categoryStrs = stringRedisTemplate.opsForList().range(SERVICE_CATEGORY_KEY,0,-1);
        List<ServiceCategory> serviceCategories = new ArrayList<>();
        if(null != categoryStrs && !categoryStrs.isEmpty()){
            for(String categoryStr:categoryStrs){
                if(!Strings.isNullOrEmpty(categoryStr)){
                    ServiceCategory serviceCategory = JSON.parseObject(categoryStr,ServiceCategory.class);
                    serviceCategories.add(serviceCategory);
                }
            }
        }
        return serviceCategories;
    }

    @Override
    public void setCategories(List<ServiceCategory> serviceCategories) {
        if(null == serviceCategories || serviceCategories.isEmpty()){
            return;
        }
        stringRedisTemplate.delete(SERVICE_CATEGORY_KEY);
        List<String> serviceCategoryStrs = new ArrayList<>();
        for(ServiceCategory serviceCategory:serviceCategories){
            String serviceCategoryStr = JSON.toJSONString(serviceCategory);
            if(!Strings.isNullOrEmpty(serviceCategoryStr)){
                serviceCategoryStrs.add(serviceCategoryStr);
            }
        }
        stringRedisTemplate.opsForList().rightPushAll(SERVICE_CATEGORY_KEY,serviceCategoryStrs);
        stringRedisTemplate.expire(SERVICE_CATEGORY_KEY,EXPIRE_TIME_MINUTE, TimeUnit.MINUTES);

    }
}
