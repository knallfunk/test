package com.wisedu.cloud.smp.web.restapi;

import com.google.common.base.Strings;
import com.wisedu.cloud.smp.api.params.BaseResponse;
import com.wisedu.cloud.smp.biz.service.api.SchoolApiService;
import com.wisedu.cloud.smp.dal.spc.model.SchoolAppService;
import com.wisedu.cloud.smp.web.common.WebUtils;
import com.wisedu.cloud.smp.web.constant.RetMsg;
import com.wisedu.cloud.smp.web.constant.RetStatus;
import com.wisedu.cloud.smp.web.params.ProductRegRequest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * Created by Administrator on 2016/6/28.
 */
@Controller
@RequestMapping("/product/info")
public class ProductRegRestAPI {

    private static final Logger LOGGER = LoggerFactory.getLogger(SchoolRestAPI.class);

    @Autowired
    private SchoolApiService schoolApiService;

    @RequestMapping(value = "/set",method = RequestMethod.POST,headers = "Content-Type=application/json")
    @ResponseBody
    public BaseResponse setProductRegInfo(@RequestBody ProductRegRequest regRequest){
        BaseResponse response = new BaseResponse();
        if (Strings.isNullOrEmpty(regRequest.getSchoolId()) || Strings.isNullOrEmpty(regRequest.getApiDomain())||
                Strings.isNullOrEmpty(regRequest.getSmpDomain())|| Strings.isNullOrEmpty(regRequest.getVersion())){
            response.setMsg(RetMsg.ParamException.PARAMS_NULL);
            response.setStatus(RetStatus.PARAM_ERROR.getValue());
            return response;
        }
        try {
            boolean flag =  schoolApiService.addSchoolRegVersion(regRequest.getSchoolId(),regRequest.getVersion(),
                    regRequest.getSmpDomain(),regRequest.getApiDomain());
            if (flag){
                response.setMsg(RetMsg.MsgStatus.SUCCESS);
                response.setStatus(RetStatus.SUCESS.getValue());
            }
        }catch (Exception e){
            LOGGER.error(WebUtils.getCurrentMethodName() + WebUtils.MEET_EXCEPTION,e);
            response.setMsg(RetMsg.MsgStatus.SYSTEM_ERROR);
            response.setStatus(RetStatus.SYSTEM_ERROR.getValue());
        }
        return response;
    }
}
