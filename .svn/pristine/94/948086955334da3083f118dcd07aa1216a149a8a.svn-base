<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wisedu.cloud.smp.dal.sp.mapper.ProxyServiceMapper" >
  <resultMap id="BaseResultMap" type="com.wisedu.cloud.smp.dal.sp.model.ProxyService" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="service_url" property="serviceUrl" jdbcType="VARCHAR" />
    <result column="service_name" property="serviceName" jdbcType="VARCHAR" />
    <result column="service_description" property="serviceDescription" jdbcType="VARCHAR" />
    <result column="is_del" property="isDel" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="biz_service_id" property="bizServiceId" jdbcType="INTEGER" />
    <result column="service_group_id" property="serviceGroupId" jdbcType="INTEGER" />
    <result column="is_logic_offline" property="isLogicOffline" jdbcType="BIT" />
    <result column="identify_token" property="identifyToken" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, service_url, service_name, service_description, is_del, create_time, update_time, 
    biz_service_id, service_group_id, is_logic_offline, identify_token
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wisedu.cloud.smp.dal.sp.model.ProxyServiceExample" >
    select
    <if test="example.distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from proxy_service
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    <if test="example.limitStart != null and example.limitStart>=0" >
      limit #{example.limitStart} , #{example.limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from proxy_service
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from proxy_service
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wisedu.cloud.smp.dal.sp.model.ProxyServiceExample" >
    delete from proxy_service
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wisedu.cloud.smp.dal.sp.model.ProxyService" >
    <selectKey resultType="java.lang.Integer" keyProperty="record.id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into proxy_service (service_url, service_name, 
      service_description, is_del, create_time, 
      update_time, biz_service_id, 
      service_group_id, is_logic_offline, 
      identify_token)
    values (#{record.serviceUrl,jdbcType=VARCHAR}, #{record.serviceName,jdbcType=VARCHAR}, 
      #{record.serviceDescription,jdbcType=VARCHAR}, #{record.isDel,jdbcType=BIT}, #{record.createTime,jdbcType=TIMESTAMP}, 
      #{record.updateTime,jdbcType=TIMESTAMP}, #{record.bizServiceId,jdbcType=INTEGER}, 
      #{record.serviceGroupId,jdbcType=INTEGER}, #{record.isLogicOffline,jdbcType=BIT}, 
      #{record.identifyToken,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wisedu.cloud.smp.dal.sp.model.ProxyService" >
    <selectKey resultType="java.lang.Integer" keyProperty="record.id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into proxy_service
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="record.serviceUrl != null" >
        service_url,
      </if>
      <if test="record.serviceName != null" >
        service_name,
      </if>
      <if test="record.serviceDescription != null" >
        service_description,
      </if>
      <if test="record.isDel != null" >
        is_del,
      </if>
      <if test="record.createTime != null" >
        create_time,
      </if>
      <if test="record.updateTime != null" >
        update_time,
      </if>
      <if test="record.bizServiceId != null" >
        biz_service_id,
      </if>
      <if test="record.serviceGroupId != null" >
        service_group_id,
      </if>
      <if test="record.isLogicOffline != null" >
        is_logic_offline,
      </if>
      <if test="record.identifyToken != null" >
        identify_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="record.serviceUrl != null" >
        #{record.serviceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceName != null" >
        #{record.serviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceDescription != null" >
        #{record.serviceDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null" >
        #{record.isDel,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bizServiceId != null" >
        #{record.bizServiceId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceGroupId != null" >
        #{record.serviceGroupId,jdbcType=INTEGER},
      </if>
      <if test="record.isLogicOffline != null" >
        #{record.isLogicOffline,jdbcType=BIT},
      </if>
      <if test="record.identifyToken != null" >
        #{record.identifyToken,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wisedu.cloud.smp.dal.sp.model.ProxyServiceExample" resultType="java.lang.Integer" >
    select count(*) from proxy_service
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update proxy_service
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.serviceUrl != null" >
        service_url = #{record.serviceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceName != null" >
        service_name = #{record.serviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceDescription != null" >
        service_description = #{record.serviceDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bizServiceId != null" >
        biz_service_id = #{record.bizServiceId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceGroupId != null" >
        service_group_id = #{record.serviceGroupId,jdbcType=INTEGER},
      </if>
      <if test="record.isLogicOffline != null" >
        is_logic_offline = #{record.isLogicOffline,jdbcType=BIT},
      </if>
      <if test="record.identifyToken != null" >
        identify_token = #{record.identifyToken,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update proxy_service
    set id = #{record.id,jdbcType=INTEGER},
      service_url = #{record.serviceUrl,jdbcType=VARCHAR},
      service_name = #{record.serviceName,jdbcType=VARCHAR},
      service_description = #{record.serviceDescription,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      biz_service_id = #{record.bizServiceId,jdbcType=INTEGER},
      service_group_id = #{record.serviceGroupId,jdbcType=INTEGER},
      is_logic_offline = #{record.isLogicOffline,jdbcType=BIT},
      identify_token = #{record.identifyToken,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wisedu.cloud.smp.dal.sp.model.ProxyService" >
    update proxy_service
    <set >
      <if test="record.serviceUrl != null" >
        service_url = #{record.serviceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceName != null" >
        service_name = #{record.serviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceDescription != null" >
        service_description = #{record.serviceDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bizServiceId != null" >
        biz_service_id = #{record.bizServiceId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceGroupId != null" >
        service_group_id = #{record.serviceGroupId,jdbcType=INTEGER},
      </if>
      <if test="record.isLogicOffline != null" >
        is_logic_offline = #{record.isLogicOffline,jdbcType=BIT},
      </if>
      <if test="record.identifyToken != null" >
        identify_token = #{record.identifyToken,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wisedu.cloud.smp.dal.sp.model.ProxyService" >
    update proxy_service
    set service_url = #{record.serviceUrl,jdbcType=VARCHAR},
      service_name = #{record.serviceName,jdbcType=VARCHAR},
      service_description = #{record.serviceDescription,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      biz_service_id = #{record.bizServiceId,jdbcType=INTEGER},
      service_group_id = #{record.serviceGroupId,jdbcType=INTEGER},
      is_logic_offline = #{record.isLogicOffline,jdbcType=BIT},
      identify_token = #{record.identifyToken,jdbcType=VARCHAR}
    where id = #{record.id,jdbcType=INTEGER}
  </update>
</mapper>