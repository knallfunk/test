package com.wisedu.cloud.smp.biz.consumer;

import com.alibaba.fastjson.JSON;
import com.wisedu.cloud.smp.biz.config.Constant;
import com.wisedu.cloud.smp.biz.config.TaskStatus;
import com.wisedu.cloud.smp.biz.model.api.SchoolAppServiceBo;
import com.wisedu.cloud.smp.common.exception.DaoException;
import com.wisedu.cloud.smp.common.exception.SetTokenWarningException;
import com.wisedu.cloud.smp.dal.sp.dao.ServiceDao;
import com.wisedu.cloud.smp.dal.sp.dao.UserRoleDao;
import com.wisedu.cloud.smp.dal.spc.dao.SchoolAppDao;
import com.wisedu.cloud.smp.dal.spc.dao.SchoolAppServiceDao;
import com.wisedu.cloud.smp.dal.spc.dao.SchoolEsbDao;
import com.wisedu.cloud.smp.dal.spc.dao.TaskDao;
import com.wisedu.cloud.smp.dal.spc.model.*;
import com.wisedu.cloud.smp.sal.apiapply.api.ServiceAPIProxy;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.amqp.core.Message;
import org.springframework.amqp.core.MessageListener;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.amqp.support.converter.JsonMessageConverter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;


/**
 * Created by huangxuecan on 2016/03/16.
 */

public class SetSchoolTokenConsumerListener implements MessageListener{

    private static final Logger logger = LoggerFactory.getLogger(SetSchoolTokenConsumerListener.class);

    @Autowired
    private SchoolAppServiceDao schoolAppServiceDao;

    @Autowired
    private SchoolAppDao schoolAppDao;

    @Autowired
    private TaskDao taskDao;

    @Autowired
    private ServiceAPIProxy serviceAPIProxy;

    private SchoolAppServiceBo schoolAppServiceBo;

    public void onMessage(Message message){
        try {
            JsonMessageConverter messageConverter = new JsonMessageConverter();
            Object receMessage = messageConverter.fromMessage(message);
            schoolAppServiceBo = (SchoolAppServiceBo) receMessage;
            logger.info("setSchoolTokenConsumerListener,the message is" + JSON.toJSONString(schoolAppServiceBo));
            SchoolApp schoolApp = new SchoolApp();
            schoolApp.setAppId(schoolAppServiceBo.getAppId());
            schoolApp.setAccessToken(schoolAppServiceBo.getAccessToken());
            schoolApp.setAppName(schoolAppServiceBo.getAppName());
            schoolApp.setSchoolId(schoolAppServiceBo.getSchoolId());

            SchoolAppExample schoolAppExample = new SchoolAppExample();
            schoolAppExample.createCriteria().andSchoolIdEqualTo(schoolAppServiceBo.getSchoolId()).andAppIdEqualTo(schoolAppServiceBo.getAppId());

            List<SchoolApp> schoolAppExists =schoolAppDao.getSchoolAppByExample(schoolAppExample);

            if(null != schoolAppExists && !schoolAppExists.isEmpty()) {
                SchoolApp schoolAppExist = schoolAppExists.get(0);
                schoolApp.setId(schoolAppExist.getId());
                schoolApp.setStatus((short) 0);
                schoolAppDao.updateSchoolAppById(schoolApp);
                SchoolAppServiceExample exampleSas= new SchoolAppServiceExample();
                exampleSas.createCriteria().andSchoolAppIdEqualTo(schoolApp.getId());
                schoolAppServiceDao.delSchoolAppService(exampleSas);
            }else {
                schoolAppDao.insertSchoolApp(schoolApp);
            }

            List<SchoolAppService> schoolAppServices = new ArrayList<>();
            for(String serviceId:schoolAppServiceBo.getServiceIds()){
                SchoolAppService schoolAppService = new SchoolAppService();
                schoolAppService.setSchoolAppId(schoolApp.getId());
                schoolAppService.setServiceId(serviceId);
                schoolAppServices.add(schoolAppService);
            }

            schoolAppServiceDao.batchInsertSchoolAppService(schoolAppServices);
            serviceAPIProxy.setSchoolAccessToken(schoolAppServiceBo.getAccessToken(), schoolAppServiceBo.getAppId(),
                    schoolAppServiceBo.getAppName(), schoolAppServiceBo.getSchoolId(),
                    schoolAppServiceBo.getServiceIds());
            Task task = new Task();
            task.setId(schoolAppServiceBo.getTaskId());
            task.setResultStatus(TaskStatus.FINISH_SUCESS.getValue());
            task.setEndTime(new Date().getTime());

            taskDao.updateTask(task);
        }catch (SetTokenWarningException e){
            Task task = new Task();
            task.setId(schoolAppServiceBo.getTaskId());
            task.setResultStatus(TaskStatus.FINISH_WARNING.getValue());
            task.setEndTime(new Date().getTime());
            task.setErrorMsg(Constant.SET_TOKEN_ERROR_MSG_SET_TOKEN_ERROR+e.getMessage()+ Constant.SET_INFO +JSON.toJSONString(schoolAppServiceBo));

            try {
                taskDao.updateTask(task);
            } catch (DaoException e1) {
                logger.error("set school token queue consumer meet exception:the message=" + JSON.toJSONString(schoolAppServiceBo), e1);
            }
            logger.warn("set school token queue consumer meet warning exception:the message="+ JSON.toJSONString(schoolAppServiceBo), e);
            return;
        }

        catch (Exception e){
            Task task = new Task();
            task.setId(schoolAppServiceBo.getTaskId());
            task.setResultStatus(TaskStatus.FINISH_ERROR.getValue());
            task.setEndTime(new Date().getTime());
            task.setErrorMsg(Constant.SET_TOKEN_ERROR_MSG_SET_TOKEN_ERROR+e.getMessage()+ Constant.SET_INFO +JSON.toJSONString(schoolAppServiceBo));

            try {
                taskDao.updateTask(task);
            } catch (DaoException e1) {
                logger.error("set school token queue consumer meet exception:the message=" + JSON.toJSONString(schoolAppServiceBo), e1);
            }
            logger.error("set school token queue consumer meet exception:the message="+ JSON.toJSONString(schoolAppServiceBo), e);
        }

    }
   
}
