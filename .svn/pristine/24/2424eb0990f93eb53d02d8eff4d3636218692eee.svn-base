package com.wisedu.cloud.smp.web.controller;

import com.google.common.base.Strings;
import com.wisedu.cloud.smp.biz.model.api.SchoolInfoBo;
import com.wisedu.cloud.smp.biz.service.api.SchoolApiService;
import com.wisedu.cloud.smp.common.conf.GlobalConf;
import com.wisedu.cloud.smp.common.util.AESUtil;
import com.wisedu.cloud.smp.common.util.MD5Utils;
import com.wisedu.cloud.smp.common.util.Utils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;

/**
 * Created by huangxuecan on 2016/6/7.
 */
@Controller("productionRegController")
public class ProductionRegController {

    private static final Logger LOGGER = LoggerFactory.getLogger(ProductionRegController.class);
    @Autowired
    private SchoolApiService schoolApiService;

    @RequestMapping(value = { "/view/productReg.html" })
    public ModelAndView getPage(HttpServletRequest request, Model model) {
        ModelAndView mv = new ModelAndView(GlobalConf.TempletesURI.PRODUCT_REG);
        try {
            String aesSchoolId = request.getParameter("schoolId");
            String aesVersion = request.getParameter("productVersion");
            String aesApiDomain = request.getParameter("apiDomain");
            String schoolId = AESUtil.decrypt(aesSchoolId, MD5Utils.md5(GlobalConf.CKEY_GENERATOR).substring(0,16));
            String version = AESUtil.decrypt(aesVersion, MD5Utils.md5(GlobalConf.CKEY_GENERATOR).substring(0, 16));
            String apiDomain = AESUtil.decrypt(aesApiDomain, MD5Utils.md5(GlobalConf.CKEY_GENERATOR).substring(0, 16));

            mv.addObject("inputSchoolId",schoolId);
            mv.addObject("version",version);
            mv.addObject("apiDomain",apiDomain);
            SchoolInfoBo schoolInfoBo = schoolApiService.getSchoolInfoById(schoolId,version);
            if(null == schoolInfoBo){
                return mv;
            }
            if (!Strings.isNullOrEmpty(schoolInfoBo.getSchoolName())){
                mv.addObject("inputSchoolName",schoolInfoBo.getSchoolName());
            }
            if (!Utils.isNullOrEmpty(schoolInfoBo.getVersionList())) {
                mv.addObject("schoolRegs", schoolInfoBo.getVersionList());
            }
            if (null != schoolInfoBo.getIsExist()){
                mv.addObject("isSave",schoolInfoBo.getIsExist());
            }
            if (!Strings.isNullOrEmpty(schoolInfoBo.getSmpHost())){
                mv.addObject("smpHost",schoolInfoBo.getSmpHost());
            }
        } catch (Exception e) {
            LOGGER.error("productReg meet exception:",e);
            return new ModelAndView(GlobalConf.TempletesURI.SYSTEM_ERROR);
        }
        return mv;
    }


}
